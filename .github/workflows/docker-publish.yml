name: action test
on: 
  push: 
    branches:
      - master
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2
      - name: login heroku 
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_KEY }}
        run: heroku container:login

      - name: Build the Docker image
        run: docker build -t web:latest .

      - name: Push the Docker image to the Heroku registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_KEY }}
          HEROKU_DEPLOY: True
        run: |
          heroku config:set SECRET_KEY=${{ secrets.SECRET_KEY }}
          heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
          heroku ps:scale web=1 -a ${{ secrets.HEROKU_APP_NAME }}
        
  check:
      runs-on: ubuntu-latest
      services:
        postgres:
          image: postgres:12.5
          env:
            POSTGRES_DB: ${{ secrets.DB_NAME }}
            POSTGRES_USER: ${{ secrets.DB_USER }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
          ports:
            - 5432:5432
            # needed because the postgres container does not provide a healthcheck
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r ./django-test/requirements-dev.txt

      - name: Migrate db
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: python ./django-test/manage.py migrate

      - name: Test with pytest
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: |
          cd ./django-test/
          pytest